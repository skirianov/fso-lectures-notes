{"version":3,"sources":["components/Note.js","components/Error.js","services/notes.js","components/App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Error","message","baseURL","noteService","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","Footer","style","color","fontStyle","fontSize","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","notesToShow","filter","useEffect","initialNotes","console","log","length","map","i","find","n","changedNote","updatedNote","catch","error","setTimeout","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","reactDom","render","document","getElementById"],"mappings":"4KAeeA,EAbF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UACb,qBACA,iBAEN,OACI,gCACI,oBAAIC,UAAU,OAAd,SAAsBJ,EAAKK,UAC3B,wBAAQC,QAASL,EAAjB,SAAoCC,QCIjCK,EAZD,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACZ,OAAgB,OAAZA,EACO,KAIP,sBAAKJ,UAAU,QAAf,UACKI,EADL,Q,gBCLFC,EAAU,qDAsBDC,EALK,CAChBC,OAhBW,WAEX,OADgBC,IAAMC,IAAIJ,GACXK,MAAM,SAAAC,GAAQ,OAAIA,EAASC,SAe1CC,OAZW,SAAAC,GAEX,OADgBN,IAAMO,KAAKV,EAASS,GACrBJ,MAAM,SAAAC,GAAQ,OAAIA,EAASC,SAW1CI,OARW,SAACC,EAAIH,GAEhB,OADgBN,IAAMU,IAAN,UAAab,EAAb,YAAwBY,GAAMH,GAC/BJ,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UCVxCO,EAAS,WAOb,OACE,sBAAKC,MAPY,CACjBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACE,uBACA,oIAuFSC,EAlFH,SAACC,GAAW,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAESF,mBAAS,kBAFlB,mBAEdG,EAFc,KAELC,EAFK,OAGSJ,oBAAS,GAHlB,mBAGdK,EAHc,KAGLC,EAHK,OAImBN,mBAAS,MAJ5B,mBAIdO,EAJc,KAIAC,EAJA,KAMfC,EAAcJ,EAChBJ,EACAA,EAAMS,QAAO,SAAAxC,GAAI,OAAuB,IAAnBA,EAAKG,aAM9BsC,qBAAU,WACR/B,EACGC,SACAG,MAAM,SAAA4B,GAAY,OAAIV,EAASU,QACjC,IACHC,QAAQC,IAAI,SAAUb,EAAMc,OAAQ,SAsClC,OACE,gCACE,uCACA,cAAC,EAAD,CAAOrC,QAAS6B,IAChB,8BACI,yBAAQ/B,QAAS,kBAAM8B,GAAYD,IAAnC,kBACUA,EAAU,YAAc,WAGtC,6BACGI,EAAYO,KAAK,SAAC9C,EAAK+C,GAAN,OAChB,cAAC,EAAD,CAEE/C,KAAMA,EACNC,iBAAkB,kBAlCL,SAACoB,GACxB,IAAMrB,EAAO+B,EAAMiB,MAAM,SAAAC,GAAC,OAAIA,EAAE5B,KAAOA,KACjC6B,EAAW,2BAAQlD,GAAR,IAAcG,WAAYH,EAAKG,YAEhDO,EACGU,OAAOC,EAAI6B,GACXpC,MAAK,SAAAqC,GACJnB,EAASD,EAAMe,KAAI,SAAA9C,GAAI,OAAIA,EAAKqB,KAAOA,EAAKrB,EAAOmD,SAEpDC,OAAO,SAAAC,GACNf,EAAgB,aAAD,OACAtC,EAAKK,QADL,sCAGfiD,YAAW,WACThB,EAAgB,QACf,KACHN,EAASD,EAAMS,QAAO,SAAAS,GAAC,OAAIA,EAAE5B,KAAOA,SAkBNpB,CAAiBD,EAAKqB,MAFzC0B,QAIX,uBAAMQ,SApDI,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBrD,QAAS4B,EACT0B,MAAM,IAAIC,MAAOC,cACjB1D,UAAW2D,KAAKC,SAAW,GAC3B1C,GAAIU,EAAMc,OAAS,GAEnBnC,EACGO,OAAOyC,GACP5C,MAAM,SAAAmB,GACLD,EAASD,EAAMiC,OAAO/B,IACtBC,EAAW,QAwCb,UACI,uBAAO+B,MAAOhC,EAASiC,SAhER,SAACV,GACxBtB,EAAWsB,EAAMW,OAAOF,UAgEhB,wBAAQG,KAAK,SAAb,qBAEJ,cAAC,EAAD,Q,MC9FRC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dba59320.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n    const label = note.important \n        ? 'make not important'\n        : 'make important';\n\n    return (\n        <div>\n            <li className='note'>{note.content}</li>\n            <button onClick={toggleImportance}>{label}</button>\n        </div>\n    )\n}\n\nexport default Note;","import React from 'react';\n\nconst Error = ({message}) => {\n    if (message === null) {\n        return null;\n    }\n\n    return (\n        <div className=\"error\">\n            {message};\n        </div>\n    )\n}\n\nexport default Error;","import axios from 'axios';\n\n//const baseURL = 'https://localhost:3001/api/notes';\nconst baseURL = 'https://fast-hollows-86103.herokuapp.com/api/notes';\n\nconst getAll = () => {\n    const request = axios.get(baseURL);\n    return request.then( response => response.data );\n}\n\nconst create = newObject => {\n    const request = axios.post(baseURL, newObject);\n    return request.then( response => response.data);\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseURL}/${id}`, newObject);\n    return request.then( response => response.data);\n}\n\nconst noteService = {\n    getAll,\n    create,\n    update\n}\nexport default noteService;","import React, { useState, useEffect } from 'react';\nimport Note from './Note';\nimport Error from './Error';\nimport noteService from '../services/notes';\n\n\n\nconst Footer = () => {\n  const footerStyle= {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2020 made by Sergii Kirianov </em>\n    </div>\n  )\n}\n\nconst App = (props) => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('a new note ...');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important === true);\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  }\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then( initialNotes => setNotes(initialNotes));\n  }, []);\n  console.log('render', notes.length, 'notes');\n    \n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1,\n    }\n      noteService\n        .create(noteObject)\n        .then( newNote => {\n          setNotes(notes.concat(newNote));\n          setNewNote('');\n        })\n  }\n\n  const toggleImportance = (id) => {\n    const note = notes.find( n => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then(updatedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : updatedNote))\n      })\n      .catch( error => {\n        setErrorMessage(\n          `the note \"${note.content}\" was already deleted from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n    }\n\n    return (\n      <div>\n        <h1>Notes</h1>\n        <Error message={errorMessage} />\n        <div>\n            <button onClick={() => setShowAll(!showAll)}>\n                show {showAll ? 'important' : 'all'}\n            </button>\n        </div>\n        <ul>\n          {notesToShow.map( (note,i) => \n            <Note \n              key={i} \n              note={note}\n              toggleImportance={() => toggleImportance(note.id)} />)}\n        </ul>\n        <form onSubmit={addNote}>\n            <input value={newNote} onChange={handleNoteChange} />\n            <button type=\"submit\">save</button>\n        </form>\n        <Footer />\n      </div>\n    )\n  }\n\nexport default App;\n","import React from 'react';\nimport reactDom from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nreactDom.render(\n  <App  />,\n  document.getElementById('root')\n);"],"sourceRoot":""}